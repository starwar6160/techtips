2018-04-12 09:40 今天似乎搬瓦工VPS down掉了。起先我注意到电脑翻墙有问题，然后试了试手机翻墙也有问题，由此排除了我的公司网络的问题；后来我又在阿里云香港节点新开一个实例，也发现ping不通我的搬瓦工IP，然后加上ss，登录到搬瓦工的控制面板，发现不知为何我的搬瓦工VPS被人用来大量发送垃圾邮件因此被暂停服务了；下次我得看看有多少端口是打开的，以及貌似这个没有防火墙。那我只有手工自己在系统里面用防火墙防止SMTP端口被人滥用了；
#我的SSH端口
ufw allow 28975
ufw allow ssh
ufw allow http
ufw allow https
#5个ShadowSocks端口
ufw allow 1897
ufw allow 2270
ufw allow 4904
ufw allow 5058
ufw allow 6091
#封禁发送垃圾邮件
ufw deny in 25
ufw deny in 110
ufw deny out 25
ufw deny out 110
ufw deny out 143
ufw deny out 465
ufw deny out 587
ufw deny out 993
ufw deny out 995
#允许我常见的家里一个IP段(32C),公司2个IP段(1B)的电脑从任何端口收发数据；
#手机等翻墙用途只需要上面5个端口就行了；
ufw allow from 223.72.64.0/19
ufw allow from 61.51.81.0/24
ufw allow from 106.120.142.0/24
#注意：设定好恰当的允许规则以后，再默认禁止其他进来的包，然后开启防火墙。
ufw default deny incoming
ufw enable

2018-04-12 13:07 奇怪，我上午11点多重装好了搬瓦工的系统，然后没过2小时，搬瓦工VPS又被停用了，又是大量发送垃圾邮件，为什么会发生这种事，哪里的问题？
网上找了其他人也遇到过，猜测可能是某个脚本出了问题，我估计是不是那个tedday的一键安装脚本出问题了，不过我外加ufw deny out 25,然后使用非root运行shadowsocks看看吧，此外把端口和密码都换掉。


2018-04-12 13:42 采用以下服务器配置文件，同时配合防火墙禁止本机访问外部主机的25(SMTP)端口，以及使用一个普通账户来执行ss，应该可以解决被滥用发送垃圾邮件的问题。
如果垃圾邮件来自我的某台电脑或者是我曾经告诉过SS账号的某台电脑，那么ufw deny out 25可以解决掉；
我这次换了端口和密码，其他我曾经告诉过账号的电脑都无法使用了，就不可能通过我这个发送垃圾邮件了（也许哪个不懂电脑的人机器中毒发送垃圾邮件）
这次没有使用外部脚本（这是垃圾邮件来源的最大可疑之处），应该不会有垃圾邮件发出了。即便有，也会被ufw deny out 25限制无法发送；
这个系统镜像本身，以及apt update源，应该都不是垃圾邮件的来源。现在就看看接下来的效果吧。
apt install python3 python-pip
pip install shadowsocks
ssserver -c mysscfg.json &
mysscfg.json内容如下：
{
"server":"0.0.0.0",
"local_address":"127.0.0.1",
"local_port":1080,
"port_password":{
         "1897":"MYFAKEPASSWORD",
         "2270":"MYFAKEPASSWORD",
         "4904":"MYFAKEPASSWORD",
         "5058":"MYFAKEPASSWORD",
         "6091":"MYFAKEPASSWORD"
},
"timeout":300,
"method":"aes-256-cfb",
"fast_open": false
}

2018-04-12 14:30
用命令随机产生比较难以破解的密码，例如:
    head -c 512 /dev/urandom | md5sum | base64 | cut -c3-18
v2ray安装非常简单：
 bash <(curl -L -s https://raw.githubusercontent.com/v2ray/v2ray-core/master/release/install-release.sh)
 v2ray配置生成器：https://htfy96.github.io/v2ray-config-gen/#
 /usr/bin/v2ray/v2ray -config /home/bwg/v2ray.json &


2018-07-19 09:08
Windows机器上，我成功使得pip走v2ray的通道去更新数据，方法是我的home目录（也就是打开cmd之后的默认目录）下建立目录pip，该目录下放一个pip.ini，内容如下：
[global]
	trusted-host = pypi.python.org
	pypi.org
	files.pythonhosted.org
proxy = http://localhost:1429
该proxy是v2ray里面新增了一个http的inbound小节创建的；pip可能只能使用http proxy，而不能用socks proxy,所以单独添加一个http端口；

2018-07-19 09:32 今天我发现，v2ray 3.30.1版本的socks协议看来有点问题无法使用，我改用http协议了。

2018-07-19 10:47 在Linux里面，~/pip/pip.conf看来不起作用，还是命令行有用，如下简化输入：
alias pp='sudo -H pip --proxy=localhost:1429 '
-H意思是sudo的时候不用当前用户的home目录，避免pip的.cache目录权限问题；

2018-07-19 17:06 解决sudo需要输入密码的问题：
vi /etc/sudoers
把自己加入sudo权限用户：
移动光标，到一行root ALL=(ALL)   ALL的下一行，按a，进入append模式，输入
your_user_name ALL=(ALL)   ALL
默认5分钟后刚才输入的sodo密码过期，下次sudo需要重新输入密码，如果觉得在sudo的时候输入密码麻烦，把刚才的输入换成如下内容即可：
your_user_name ALL=(ALL) NOPASSWD: ALL
注意： 有的时候你的将用户设了nopasswd，但是不起作用，原因是被后面的group的设置覆盖了，需要把group的设置也改为nopasswd。
joe ALL=(ALL) NOPASSWD: ALL
%admin ALL=(ALL) NOPASSWD: ALL


2018-07-24 20:18 SSH登录问题调试
/usr/sbin/sshd -p 2222 -d
      -d     以调试模式运行。服务器将在前台运行并发送非常详细的调试日志信息，
             服务器将只允许接入一个连接，并且不派生出子进程。仅用于调试目的。
             使用多个 -d 选项可以输出更详细的调试信息(最多3个)。
我又遇到新建服务器无法ssh的情况。。不过这次是建立服务器过程中选择的sshkey起作用，但是只能作用于root账号。我新建的dev账号，我手工建立目录，放公钥，无效，权限看了也看不出问题。后来我以dev用户自己的身份ssh-keygen生成了默认钥匙，然后手工添加authorized_keys文件并设置权限600，这次好了。看来还是手工添加的配置问题；

2018-07-26 13:32 添加一个普通用户能执行sudo并且sudo免密码的方法
vi /etc/sudoers
把其中的相关段改为如下，假设普通用户的用户名是dev,这里重点是增加了普通用户和用户组都免密码，在一般个人机器上问题不大，其实我觉得哪怕是生产服务器，sudo前缀也足够提示你谨慎执行命令了：
# User privilege specification
root    ALL=(ALL:ALL) ALL
dev ALL=(ALL:NOPASSWD) ALL
# Members of the admin group may gain root privileges
%admin ALL=(ALL) ALL
dev ALL=(ALL) NOPASSWD: ALL

2018-07-26 13:53 ubuntu 16.04给docker设置代理服务器：
mkdir /etc/systemd/system/docker.service.d
vi /etc/systemd/system/docker.service.d/http-proxy.conf
内容：
[Service]
Environment="HTTP_PROXY=http://localhost:1429"
还有其他不需要代理服务器的注册表的话添加一条：
Environment="NO_PROXY=localhost,127.0.0.0/8,docker-registry.somecorporation.com"
Flush 配置改变：systemctl daemon-reload
验证配置relaod了：systemctl show docker | grep 1429
重启docker服务：systemctl restart docker
然后就会使用新设置的代理了。

2018-07-27 20:45 ubuntu重置密码
开机进入grub菜单，选择Advanced options for Ubuntu
选择进入带最新的内核版本的Ubuntu（recovery mod）。recovery模式是用来在你无法进入系统时恢复系统或者执行其它诸如重置密码或升级系统的工作的。
选择root选项进入超级用户模式。
在此，你只有只读权限。为了能够运行管理员命令，必须重新挂载这个shell窗口，赋予读写权限。输入命令：
mount -rw -o remount /
现在你可以运行一小部分命令了，包括更改密码的命令：
sudo passwd username
至此，密码更改完成，重启电脑即可。
