2018-03-01 16:38 阿里云官方给出的测试随机IOPS的命令，我修改执行时间从1000秒改为100秒了；
fio -direct=1 -iodepth=128 -rw=randread -ioengine=libaio -bs=4k -size=1G -numjobs=1 -runtime=100 -group_reporting -filename=iotest -name=Rand_Read_Testing
fio -direct=1 -iodepth=128 -rw=randwrite -ioengine=libaio -bs=4k -size=1G -numjobs=1 -runtime=100 -group_reporting -filename=iotest -name=Rand_Write_Testing
结果：4K随机读IOPS 2396，延迟 53ms;4K随机写IOPS 1236，延迟103ms;
svvm用这个命令测试，读取1962/延迟65,写入665/延迟192；

2018/3/4 19:23:40 [星期日] 阿里云的OSS资源包里面下行流量包，最低规格的50G每月，1年时长108元，等于每月9元包50G。相对于按需流量价格0.5元/G也就是说每月下行流量超过18G的话用资源包更合算，自己备份目的的话，按量付费更合算；
存储包：最低规格40G，1年花费是9元，这是对于普通用量小的用户的一个特别优惠，等于鼓励大家试用。往上一个等级100G就是117元了，1T是1242元，大概可以算1G一年1.2元是正常价格。
低频访问存储价格是8分钱/G/月，最低按照30天收费，归档存储是3.3分钱/G/月，最低按照60天收费，这两者只能按量付费，没有资源包。归档存储比AWS强，1分钟左右时间即可恢复，不像AWS要几个小时的时间；低频访问型存储、归档型存储，Object小于128KB文件按照128KB文件大小计算存储空间，超过128KB大小的Object按照实际大小计算存储空间。所以这两者最好是压缩打包加密后保存；

2018/3/4 19:59:27 [星期日]
https://zhuanlan.zhihu.com/p/22814243?from=timeline&isappinstalled=0	阿里巴巴73款开源产品全向图

2018-03-05 16:44 阿里云ECS监控插件手工安装：
sudo bash -c 'CMS_HOME="/usr/local/cloudmonitor" CMS_VERSION="1.2.22" CMS_ARCH="linux64" CMS_PROXY="bjcmsproxy.aliyun.com:3128"; \
if [ -f $CMS_HOME/wrapper/bin/cloudmonitor.sh ] ; then $CMS_HOME/wrapper/bin/cloudmonitor.sh remove; rm -rf $CMS_HOME; fi ; \
mkdir -p $CMS_HOME && \
wget -e "http_proxy=$CMS_PROXY" -O "$CMS_HOME/cloudmonitor.tar.gz" "http://cms-download.aliyun.com/release/$CMS_VERSION/$CMS_ARCH/agent-$CMS_ARCH-$CMS_VERSION-package.tar.gz" && \
tar -xf $CMS_HOME/cloudmonitor.tar.gz -C $CMS_HOME && \
rm -f $CMS_HOME/cloudmonitor.tar.gz && \
chown -R root:root $CMS_HOME && \
$CMS_HOME/wrapper/bin/cloudmonitor.sh install && \
$CMS_HOME/wrapper/bin/cloudmonitor.sh start'
查看运行状态
sudo /usr/local/cloudmonitor/wrapper/bin/cloudmonitor.sh status
重启
sudo /usr/local/cloudmonitor/wrapper/bin/cloudmonitor.sh restart
我用该方法成功安装了所有ECS主机的监控，过几天看看监控结果可以确定我们需要多高配置的机器。云计算其实更多的是弹性增加机器，而不是一开始就有很大性能冗余；

2018-03-07 08:58 试试看OSS用作数据备份；
http://blog.csdn.net/qq_36510261/article/details/78874317   【云计算的1024种玩法】使轻松将服务器文件备份至 OSS
教程的主角是 alicloud-duplicity，它是在 duplicity 的基础上支持OSS存储的开源备份工具，alicloud-duplicity 支持 duplicity 的所有命令和参数。duplicity 是一款开源的备份工具，使用librsync 支持增量备份，节约本地存储空间，同时使用GnuPG加密数据。duplicity 能将数据轻松的备份到本地、共享存储和云存储等。
使用 alicloud-duplicity 可以实现全量备份和增量备份并对其进行加密并且上传至 OSS。
https://www.mindg.cn/?p=555 自动备份db数据到阿里云OSS


2018-04-08 13:25 请参考以下内容，可能是低成本替代ES集群的更好方法：
https://jishu.io/kubernetes/goodbye-elk-hello-fluent-bit-aliyun/	再见ELK，您好fluent-bit-aliyun


2018-05-10 15:03 阿里云最便宜的GPU深度学习机型，gn5i,2vcpu/8G/1*Nvidia Tesla P4，按量付费价格8.7元/小时，竞价实例价格和按量付费一样，无优惠；包月价格2389元/月；Tesla P4是Nvidia在16年9月发布的深度学习 GPU，2560个CUDA核心。当前报价18K，大概相当于2块泰坦；
阿里云最便宜的GPU渲染机型ga1,1*AMD S7150/4,也就是说1/4块S7150(该卡性能7T单精度/0.5T双精度，8G GPU内存)，竞价实例无优惠，每小时2.2元;我看了AMD网站的介绍，S7150似乎是一块GPU虚拟化显卡，可以分配给最多16用户。那么阿里云的价格就是2.2元/小时获得1.7T单精度/125G双精度/2G GPU内存；
AWS的最便宜的GPU计算机型p2.xlarge，配备一个K80 GPU/2496个CUDA核心和12G的GPU内存；竞价实例在首尔地区是46美分/小时；K80单个GPU的性能是4.3T单精度/1.4T双精度/2496个CUDA核心/12G GPU内存；
看来AWS比阿里云性价比高好几倍；
AWS还有个弹性GPU功能，不知道是用的什么GPU，是按照GPU内存计费，最小1G GPU内存的弹性GPU每小时5美分（美国本土5美分，亚洲翻倍）。适合学习用途或者需要少量GPU能力的用途；

2018-05-12 22:35 如下的代码，我在阿里云的函数计算里面使用的，然后在API网关里面使用参数透传，初步成功了。之所以说初步，是因为更灵活的参数映射还没做，而且就透传而言，POST请求的Body里面是使用JSON数据尚未成功，总是503错误，只成功了使用Query参数的方式；
503错误应该是出在python程序那部分，也就是函数计算的部分，因为我在函数末尾把返回值改为返回固定字符串，而且不去解析入口参数的时候就200成功了。看来还是在函数计算和API网关的配合方面我还没完全掌握；
使用body传入请求数据的部分之所以失败，看来是因为传入的body数据有base64编码，需要解码之后再使用；但是我做base64解码暂未成功；
然后我改为使用入参映射，把前端在body里面的入参，映射到后端的query参数里面，暂时成功了。
后来我在此编辑API函数定义，发现后端那里根本就没了“body”这个参数所在位置，也许是因为参数映射的缘故不需要这个位置了？就留下了参数路径，Header，Query三个参数所在位置；
但是如果我想通过body传送较为复杂的输入参数呢？所以我估计通过body传送参数应该是相对最难的一个选项；
不过我暂时可以传递简单参数进来，并输出json结果，暂时够用了，以后熟悉了再进行更复杂的试验好了；
我的最简单的2个数字相加的函数，执行时间3ms，收费时间100ms,分配内存128M，实际使用内存11M，还行。收费精度是CPU 100ms，内存128M；
import logging
import json

def handler(event, context):
  jc = json.loads(event)
  pa1 = jc["queryParameters"]['n1']
  pa2 = jc["queryParameters"]['n2']
  #input your app code
  rdict={}
  rdict['res512']=pa1+pa2
  content = json.dumps(rdict)
  api_rep = {
    "isBase64Encoded":"false",
    "statusCode":"200",
    "headers":{"Content-Type": "application/json; charset=utf-8"},
    "body":content
  }
  return json.dumps(api_rep)

2018-05-14 09:05 阿里云函数计算的按量付费计费标准是调用次数+执行时间+公网费用。其中公网费用是可选的，如果只在VPC内部使用的话就不用了。
每月前1M次调用免费（折合1.33元），每月前111GB*小时免费（每GB*小时费用0.4元,实际计费单位是GB*秒，计费时间精度是100毫秒往上取整）。
那么按照1秒1次调用的频率的话，不算免费额度，每月调用费用大约3.5元，每次调用都接近满负荷的话，使用内存128M，那么每月720小时x(1/8G)=90GB*小时,费用36元；所以大概算算，其实函数计算并不适合稳定的高负荷的用途，最适合平时流量很低，偶尔突发高流量的弹性计算场合；至于每月的免费额度，基本上是鼓励大家利用函数计算学习测试的意思，用于学习测试这个免费额度几乎够你整个月用的。
如果每小时1000次请求，每次请求200ms，内存是最低的128M，那么不算免费额度，每月请求费用不过1元，时间和内存费用不过2元。

2018-07-03 17:00 阿里云带宽临时升级功能：
仅支持预付费的包年包月和包周实例；
仅能提升按照固定带宽计费的公网带宽；
只能用于升级公网带宽，不能降低公网带宽；
续费降配后当前计费周期内不能临时升级带宽；

2018-07-06 17:25 阿里云的共享带宽包业务很有用，介绍在https://help.aliyun.com/product/55092.html?spm=a2c4g.11186623.3.1.czuSwB
按照现在的带宽成本，1Mbps每天3.3元左右，我们的3台Web服务器，都是10M固定带宽，大概带宽费用就要每年3.6万；共享带宽包816元/年/Mbps，按我现在看的带宽使用，所有服务器日常共享5M的带宽即可，而且这个共享带宽可以灵活扩充的。那么这个带宽费用可以降低为每年4K，仅此一项就可以比3.6万降低每年3.2万。

2018-07-06 21:40 阿里云的流量包，分为1个月和半年两种有效期，平均价格都是1T全日通用流量600元左右。半年有效期的有60G，300G，600G，3T，6T，30T，60T，300T几种。
然后我看了看阿里云的web3，一年快到期了，eth0的上下行流量大致对等，合计120G左右。那等于流出流量消耗也就60G；RX 55G，TX 65G；
acc2:RX 1.0T，TX 3.2T
web1:RX 3.7T,TX 1.4T
es1:RX 4.3T,TX 3.2T
es2:RX 4.4T,TX 3.1T
es3:RX 4.5T,TX 2.7T
work2:RX 17G,TX 25G
阿里云流量计费只算出去的也就是TX流量，合计13.7T；也就是8K多的费用即可满足全年流量需求，而且临时带宽上限可以达到100M；
一条10M线路一天可以发送108G字节内容；大约等于一年满负荷可以发送40T，那么3条线路一年合计满负荷可以发送120T的内容，那么线路利用率大概11%左右吧。
此外阿里云的 费用-消费记录-使用记录-云服务器ECS按量付费里面可以获得流量明细，按小时和按天；导出CSV格式；每次最多能导出1个月，精度有按小时和按天；统计结果，流出流量如下：
1708:13G
1709:33G
1710:6G
1711:10G
1712:7G
1801:4G
1802:14G
1803:12G
1804:35G
1805:15G
1806:6G
如此加出来大概在155G，那么3个60G的半年包即可，一个36元，3个108元就行。一开始来一个60G的半年包36元，3个月后再来一个，6个月后再来一个，这样就行了；回头我看看这样按流量计费，使用流量包的话，进入和出去流量的最高带宽是多少，貌似都能到100M，这样一举两得；

2018-07-09 17:26 按流量计费的ECS实例如果流量不够用的时候能否转换为按照固定带宽计费？不过这个问题基本不是问题，因为有最高300T的流量包，按照1T大约600元的优惠价格的话，一般业务都不会有问题。

2018-07-10 15:46
阿里云磁盘价格信息：华北2（北京）价格，单位是元/1GB/月：
普通云盘0.3，高效云盘0.35，SS云盘1.0，本地SSD盘0.8，而且我观察了一下，按量付费和包月折算下来价格基本差不多，或者说仅仅比包月贵两三个百分点不到，基本可以忽略；
阿里云带宽价格信息：
包年包月实例，固定带宽5Mbps以下，大致上是25元/1Mbps/月，超过以后就急剧升高到80元/1Mbps/月；
按量计费实例，更贵，5M以下是折合45元/1Mbps/月，5M以上折合180元/1Mbps/月；
阿里云国际站点的流量费比国内还稍高，这个就奇怪了，国外运营商特别是美国的带宽费用很低的，或者说国内运营商的带宽费用太黑了，按理说美国带宽费用该最多最多到国内的一半都可以算很贵了，恐怕1/4以下才算正常，看来阿里云打算在带宽费用上闷声发大财，利用大家的惯性心理，觉得国外和国内带宽费用一样。不过中东迪拜的带宽费用是其他区域的5倍，真是昂贵；
按流量计费 0.8元/GB。
*************
带宽有共享带宽包，共享流量包，OSS有存储包，不知道云盘有没有；

2018-07-10 16:14 从4号的计划修改而来，主要是固定带宽改为按流量计费；
等我解决了web服务器的cpu占用率问题，ES的磁盘占用率问题，那么可以考虑：
web:4核心16G，磁盘50G SSD，按流量计费网络，1台机器同时部署web/service/accessor三个组件；使用ecs.g5.xlarge配置，一年4.8K；
es:一台4核心32G内存型机器，500G 高效云盘，按流量计费，做单机ES；使用ecs.r5.xlarge配置，一年6K；
李金龙测试服务器：改为共享型,ecs.t5-lc1m2.small，1核心2G内存，100G高效云盘，按流量计费，1年费用0.8K；
三者合计一年不到12K。
RDS：PostgreSQL 9.4 rds.pg.s3.large,4C8G/300G本地SSD存储；11K/年，这是现有配置费用。
********************************************
上述配置都是按流量计费，所以另外单独购买流量包，半年有效期的亚太通用全时流量包，大约是600元/1TB的价位，合适的有300G/半年/180元，半年后再买一个即可。我们用不了多少流量，去年一年才160G，所以稍微宽裕一点一年2个合计600G流量可以了，才360元；
最合适的方法，上述web/service/accessor/pgsql/es等组件都部署在同一台高配置机器上，使用SSD；这样最大限度利用了机器，每一个服务又都有足够大的余量。
8核心64G内存的本地SSD实例，1788G容量NVME SSD，年付18K；4核心32G内存，894GB NVME SSD的本地SSD实例ecs.i2.xlarge年付9K；

2018-07-11 16:13
阿里云的i1本地SSD磁盘实例，本地SSD最大单盘IOPS可以到24万，SSD云盘最大IOPS是2万；所以拿来跑mysql，默认配置下，两者性能相差6.6倍，参数调优后，性能仍然有2倍的差距，说明数据库还是使用本地SSD机型跑比较好；缺点是本地SSD没有冗余备份，底层物理硬件损坏时会丢失数据；所以需要自己定时备份；
我看了，i1和i2相比，i2更新，配备17年第三季度的skylake处理器，CPU和内存比例为1:8,配备本地存储也更大，似乎性价比更高；
我们裁剪配置的用途？是在可预见的将来暂时没有大规模使用的可能性了吗？
初步配置裁剪方案：
一个本地SSD实例ecs.i2.xlarge,4核心(Intel Xeon Skylake 17Q3 Platinum 8163 2.5G)，32G内存，1*894G NVME SSD（预计IOPS大约15万左右）。该是实例上面跑web/acc/service/redis/es等除了pgsql之外的所有业务；年费用9k;
一个降低到原来1/4配置的pgsql RDS实例，年费用3k;
2个有效期6个月的300G共享流量包，费用0.36K；
以上配置对于我们目前的低流量状态来说已经足够，ES速度也会很快，就是ES只有一个节点，健康状况会显示为黄色；所以ES数据需要我们自己定期备份；
如果业务做大了，只需要多出钱垂直升级硬件配置即可。我们的业务规模在可预计的将来还不会大到需要水平扩展的水准；还可以把部分组件拆分部署到新的机器上即可；

2018-07-12 09:54 阿里云组件研究：
极速型OSS
并行文件系统CPFS
NAS Plus极速IO型
NAS Plus智能缓存型
ESSD云盘，百万IOPS；（容量和IOPS线性相关，100IOPS/GB 吞吐量 1MBps/GB 价格1元/GB/月，公测期间仅限g5se存储增强实例可以挂载ESSD。）

2018-07-12 15:21 阿里云大数据系统裁剪方案讨论会：
我的方案基本得到赞同和通过；
结论如下：
老机器续费降配一个月以便留出行动和测试的时间切换到新系统；续费降配时带宽改为按流量，先买好流量包；
老机器中不需要用的部分及时转移数据等东西以后，砍掉。包括3台ES机器，web2和web3；
老机器切换的时候尽量缩短切换时间，不要好几天以上（我可以做到1小时以下），以后其他场景的数据接入后数据量大了这个问题就更大一些了。
数据库是最重要的，所以继续买阿里云的托管服务，但是配置可以降低到1/4；但是数据库存储要留够余量最好保持不变；
硬件组的机器和mysql在无需改变数据的情况下续费降配；
Elastic Search的数据去年并未产生什么价值，所以把这个大头费用暂时降下来为好。等用到再说。
裁剪机器时记住记录老机器的配置；
购买阿里云的git代码托管服务；
大约2周时间完成裁剪任务，然后1个月内观察试验新系统的性能等等；

2018-07-12 16:21 我的操作：
数据库和流量包：
Redis：原来是4G单核心，每月181元，我改为1/4的配置，1G单核心，每月53，暂时订购了2个月，因为有一张100的优惠券，实际花费6元；
李金龙的MySQL5.7，1C1G，40GSSD云盘存储，最大连接数2000，IOPS 1200,一年936，已经是最低配置了，就直接续费1年；
PGSQL：原配置4C8G，300GSSD存储，一年12K；实际使用CPU3%，内存4%，存储3%；所以降低为1C2G，存储30G（随时可以提升），续费1个月，花费284；
1个阿里云共享流量包，300G，半年有效期，177.6元。根据去年的经验半年应该用不到100G，留下了200%的余量。
web:
web1:续费1个月共享计算型ecs.n4.xlarge,4C8G,流量带宽10Mbps；费用583；
web2:续费一个月1C2G的共享计算型ecs.n4.small，流量带宽10Mbps，费用259;一个月内把accessor迁移到web1去。
web3:不续费，下周赶在失效前迁移数据到web1。
续费需要重启，在22号凌晨，所以22号周日早上看看系统重启后是否异常；
站控端开2个实例，同时向新旧两个acc发送数据，即可平滑升级；
ES:
es1:续费降配共享通用型，ecs.mn4.xlarge,4C16G,流量带宽10Mbps,时间一周，有效期到7月29日0点，费用222.6；
es2:下周及时转移数据到es1后不再续费；
es3:下周及时转移数据到es1后不再续费；
other1(硬件组服务器):带宽改为按流量带宽10Mbps，配置改为共享计算型ecs.n4.small,1C2G,E5-2682v4,84每月，退款了46左右。然后续费1个月后看使用情况。1个月费用119；

2018-07-13 09:19
您的帐号未绑定电子邮箱，请绑定一个电子邮箱，以方便您完成以下操作
1. 接收云服务开通、到期、故障及关停等操作通知；
2. 重要信息操作例如更改、找回帐号密码、释放ECS等云产品高危操作时用作身份验证

2018-07-13 14:31
阿里云新机器：绑定密钥对webn713；域名webn
20180713启用，貌似ubuntu 16.04LTS默认不允许root使用公钥登录，所以要先设置一个密码。
确实我先重置了root密码后用密码登录方式登录进去后看了authorized_keys，居然是空的。。阿里云控制面板里面的绑定什么用也没有。我的root密码记录在密码库里面，然后新建dev用户，将其密码设定为文档里面之前设定的其他机器的dev用户密码；然后我把dev用户增加了公钥登录，我的LinuxHost1121公钥；root用户就留着密码登录吧。
正常登录后，我发现弹性网卡和本地SSD设备都看不见；
后来查了查，我要自己fdisk然后mkfs.ext4r然后mount才行。
挂载之后，我的测试，阿里云标准的1G文件大小的测试飞快结束了，
我改为10G文件大小，测试结果随机写入iops是93K，99%请求在2.0ms以内，磁盘负荷97.3%；
我又改为5个线程，每个5G文件，测试结果iops 136K,95%请求在10ms以内，磁盘负荷99.94%；
随机读取成绩，10G文件，单线程，iops 147K，99%请求在0.8ms以内；磁盘负荷99.5%；
也就是说，这个本地NVME SSD基本达到了标称速度，读取性能特别优异，单线程就随机读取iops 147k，而且延迟做到了99%在0.8ms以内；
普通的高效云盘IOPS在2-3K，延迟99%在100ms左右；
挂载目录是/opt，所以注意，只有在这个目录下，才是SSD的性能。还有，自动挂载还没做，目前还只有root才能读写。
